<?xml version="1.0" encoding="utf-8" ?>
<odoo>

    <!-- =================== PRAVILA ======================= -->
    <record id="hr_salary_rule_rr" model="hr.salary.rule">
        <field name="name">Redovan rad</field>
        <field name="sequence" eval="1" />
        <field name="code">REDRAD</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# 10_SF - standard with food, 11_S - standard bez food
days_tsh_10_sf = worked_days.TSH_10_SF and worked_days.TSH_10_SF.number_of_hours
days_tsh_11_s = worked_days.TSH_11_S and worked_days.TSH_11_S.number_of_hours
radni_sati = days_tsh_10_sf + days_tsh_11_s
result_qty = radni_sati
result = contract.br_bod * float(payslip.rule_parameter('VRBOD'))
result = round(result, int(payslip.rule_parameter('ZAOK')))
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_rr_f" model="hr.salary.rule">
        <field name="name">Redovan rad (f)</field>
        <field name="sequence" eval="2" />
        <field name="code">REDRAD</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
# ako se obracun odnosi na 15 od 30 dana ovog mjeseca, obrac_period = 0.5
obrac_period = (worked_days.WORK100 and worked_days.WORK100.number_of_hours) / (worked_days.FWORK100 and worked_days.FWORK100.number_of_hours)

# 10_SF - standard with food, 11_S - standard bez food
days_tsh_10_sf = worked_days.TSH_10_SF and worked_days.TSH_10_SF.number_of_hours
days_tsh_11_s = worked_days.TSH_11_S and worked_days.TSH_11_S.number_of_hours
radni_sati = days_tsh_10_sf + days_tsh_11_s

# ucesce ovog tipa primanja u ukupnom fondu sati koji se obracunava
# ako je 160 sati ukupan fond sati, a 80 se odnosi na redovan rad, ucesce je 0.5
ucesce_sati = 0
if worked_days.WORK100 and worked_days.WORK100.number_of_hours:
   ucesce_sati = radni_sati / (worked_days.WORK100 and worked_days.WORK100.number_of_hours)

fiks_pla = contract.wage * obrac_period
# dnevno 1% prosjecne plate FBiH
to_dnevno = float(payslip.rule_parameter('PROS_N_P_FBIH')) * 1 / 100.00
to_umanjiti_platu = (worked_days.WORK100 and worked_days.WORK100.number_of_days) * to_dnevno
neto_plata_bez_to = fiks_pla - to_umanjiti_platu

# neto_prije oporezivanja trazimo
kbo = float(payslip.rule_parameter('KOEF_BO'))/100
kd_iz = (float(payslip.rule_parameter('D_IZ_PIO')) + float(payslip.rule_parameter('D_IZ_ZDR')) + float(payslip.rule_parameter('D_IZ_ZAP')))/100
kpor = float(payslip.rule_parameter('POREZ'))/100
lic_odb = contract.koef_lo * 300
neto_poslije = neto_plata_bez_to
if (neto_poslije - lic_odb * kpor) &lt;= 0:
  neto_prije = neto_poslije
else:
  neto_prije = (neto_poslije - lic_odb * kpor) / (1 - kbo * kpor * (1 - kd_iz))

result_qty = radni_sati
result = round(neto_prije * ucesce_sati / radni_sati, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_nr" model="hr.salary.rule">
        <field name="name">Noćni rad</field>
        <field name="sequence" eval="5" />
        <field name="code">NOCNI</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
# 20_NF - nocni with food, 21_N - nocni bez food
days_tsh_20_nf = worked_days.TSH_20_NF and worked_days.TSH_20_NF.number_of_hours
days_tsh_21_n = worked_days.TSH_21_N and worked_days.TSH_21_N.number_of_hours
radni_sati = days_tsh_20_nf + days_tsh_21_n
result_qty = radni_sati
result = contract.br_bod * float(payslip.rule_parameter('VRBOD')) * 1.5
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_dpraz" model="hr.salary.rule">
        <field name="name">Državni praznik</field>
        <field name="sequence" eval="10" />
        <field name="code">DPRAZ</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.DRZAVNI_PRAZNIK and abs(worked_days.DRZAVNI_PRAZNIK.number_of_hours)
# kao redovan rad
result = contract.br_bod * float(payslip.rule_parameter('VRBOD'))
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_vpraz" model="hr.salary.rule">
        <field name="name">Vjerski praznik</field>
        <field name="sequence" eval="11" />
        <field name="code">VPRAZ</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.VJERSKI_PRAZNIK and abs(worked_days.VJERSKI_PRAZNIK.number_of_hours)
result = contract.br_bod * float(payslip.rule_parameter('VRBOD'))
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_r_dpraz" model="hr.salary.rule">
        <field name="name">Rad na državni praznik (+40%)</field>
        <field name="sequence" eval="15" />
        <field name="code">R_DPRAZ</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
# 31_WF - work on holiday with food, 31_W - work on holiday bez food
days_tsh_30_wf = worked_days.TSH_30_WF and worked_days.TSH_30_WF.number_of_hours
days_tsh_31_w = worked_days.TSH_31_W and worked_days.TSH_31_W.number_of_hours
result_qty =  days_tsh_30_wf + days_tsh_31_w
# kao redovan rad
result = contract.br_bod * float(payslip.rule_parameter('VRBOD')) * 0.4
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_godis" model="hr.salary.rule">
        <field name="name">Godišnji odmor</field>
        <field name="sequence" eval="20" />
        <field name="code">GODIS</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.GODISNJI_ODMOR and abs(worked_days.GODISNJI_ODMOR.number_of_hours)
# isto se boduje kao redovan rad
result = contract.br_bod * float(payslip.rule_parameter('VRBOD'))
result = round(result, zaok)
        </field>
      <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_bolov" model="hr.salary.rule">
        <field name="name">Bolovanje do 42d (90%)</field>
        <field name="sequence" eval="25" />
        <field name="code">BOLOV</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.BOLOVANJE and abs(worked_days.BOLOVANJE.number_of_hours)
# redovan rad 90%
result = contract.br_bod * float(payslip.rule_parameter('VRBOD')) * 0.9
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_bolov_pov" model="hr.salary.rule">
        <field name="name">Bolovanje, povreda na radu (100%)</field>
        <field name="sequence" eval="26" />
        <field name="code">BOLOV_POV</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.POVREDA_NA_RADU and abs(worked_days.POVREDA_NA_RADU.number_of_hours)
result = contract.br_bod * float(payslip.rule_parameter('VRBOD'))
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_bolov_preko" model="hr.salary.rule">
        <field name="name">Bolovanje preko 42d (80% POS_PUNA)</field>
        <field name="sequence" eval="27" />
        <field name="code">BOL_PREKO</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty = worked_days.BOLOVANJE_PREKO_42_DANA and abs(worked_days.BOLOVANJE_PREKO_42_DANA.number_of_hours)
result = 0
if result_qty &gt; 0.0:
    if inputs.POS_PUNA:
        # posljednja puna plata
        pos_puna = inputs.POS_PUNA.amount
    else:
        pos_puna = None
    pos_puna_bod =  pos_puna / (worked_days.FWORK100 and worked_days.FWORK100.number_of_hours)
    result = pos_puna_bod * 0.8
    result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_nep_ods" model="hr.salary.rule">
        <field name="name">Neplaćeno odsustvo</field>
        <field name="sequence" eval="28" />
        <field name="code">NEP_ODS</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.NEPLACENO_ODSUSTVO and abs(worked_days.NEPLACENO_ODSUSTVO.number_of_hours)
result = contract.br_bod * float(payslip.rule_parameter('VRBOD')) * 0.0
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_mr" model="hr.salary.rule">
        <field name="name">Minuli rad</field>
        <field name="sequence" eval="30" />
        <field name="code">MINRAD</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_qty = 1
zaoku = int(payslip.rule_parameter('ZAOKU'))
result_rate = contract.koef_mr
result = round(result_rules.REDRAD.amount * result_rules.REDRAD.quantity, zaoku)
result += result_rules.NOCNI and round(result_rules.NOCNI.amount * result_rules.NOCNI.quantity, zaoku)
result += result_rules.DPRAZ and round(result_rules.DPRAZ.amount * result_rules.DPRAZ.quantity, zaoku)
result += result_rules.VPRAZ and round(result_rules.VPRAZ.amount * result_rules.VPRAZ.quantity, zaoku)
result += result_rules.GODIS and round(result_rules.GODIS.amount * result_rules.GODIS.quantity, zaoku)
#result += result_rules.BOLOV and round(result_rules.BOLOV.amount * result_rules.BOLOV.quantity, zaoku)
result += result_rules.BOLOV_POV and round(result_rules.BOLOV_POV.amount * result_rules.BOLOV_POV.quantity, zaoku)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_ceka" model="hr.salary.rule">
        <field name="name">Privremeni prekid rada</field>
        <field name="sequence" eval="34" />
        <field name="code">CEKANJE</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.REST and abs(worked_days.REST.number_of_hours)
min_met = float(payslip.rule_parameter('MNS_MET_FBIH'))
result = round(min_met, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_ceka_f" model="hr.salary.rule">
        <field name="name">Privremeni prekid rada (f)</field>
        <field name="sequence" eval="35" />
        <field name="code">CEKANJE</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
# ako se obracun odnosi na 15 od 30 dana ovog mjeseca, obrac_period = 0.5
obrac_period = (worked_days.WORK100 and worked_days.WORK100.number_of_hours) / (worked_days.FWORK100 and worked_days.FWORK100.number_of_hours)
# sati cekanja
neradni_sati = worked_days.REST and abs(worked_days.REST.number_of_hours)

# ucesce ovog tipa primanja u ukupnom fondu sati koji se obracunava
# ako je 160 sati ukupan fond sati, a 80 se odnosi na redovan rad, ucesce je 0.5
ucesce_sati = 0
if worked_days.WORK100 and worked_days.WORK100.number_of_hours:
   ucesce_sati = neradni_sati / (worked_days.WORK100 and worked_days.WORK100.number_of_hours)

fiks_pla = contract.wage * obrac_period
# dnevno 1% prosjecne plate FBiH
to_dnevno = float(payslip.rule_parameter('PROS_N_P_FBIH')) * 1 / 100.00
to_umanjiti_platu = (worked_days.WORK100 and worked_days.WORK100.number_of_days) * to_dnevno
neto_plata_bez_to = fiks_pla - to_umanjiti_platu

# neto_prije oporezivanja trazimo
kbo = float(payslip.rule_parameter('KOEF_BO'))/100
kd_iz = (float(payslip.rule_parameter('D_IZ_PIO')) + float(payslip.rule_parameter('D_IZ_ZDR')) + float(payslip.rule_parameter('D_IZ_ZAP')))/100
kpor = float(payslip.rule_parameter('POREZ'))/100
lic_odb = contract.koef_lo * 300
neto_poslije = neto_plata_bez_to
if (neto_poslije - lic_odb * kpor) &lt;= 0:
  neto_prije = neto_poslije
else:
  neto_prije = (neto_poslije - lic_odb * kpor) / (1 - kbo * kpor * (1 - kd_iz))

result_qty = neradni_sati
result = round(neto_prije * ucesce_sati / neradni_sati, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>


   <record id="hr_salary_rule_to_o" model="hr.salary.rule">
        <field name="name">Topli obrok (oporezivi dio)</field>
        <field name="sequence" eval="36" />
        <field name="code">TO_O</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty =  worked_days.FOOD and worked_days.FOOD.number_of_days
to_neopor = float(payslip.rule_parameter('PROS_N_P_FBIH')) * 1 / 100.00
result = float(payslip.rule_parameter('TO_DAN')) - to_neopor
if result &lt;= 0:
    result_qty = 0
    result = 0
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_stim" model="hr.salary.rule">
        <field name="name">Stimulacija</field>
        <field name="sequence" eval="37" />
        <field name="code">STIMUL</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_qty = (inputs.STIMULACIJA and inputs.STIMULACIJA.amount_qty)
result = (inputs.STIMULACIJA and inputs.STIMULACIJA.amount)
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_stim_f" model="hr.salary.rule">
        <field name="name">Stimulacija (f)</field>
        <field name="sequence" eval="38" />
        <field name="code">STIMUL</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
stimulacija = (inputs.STIMULACIJA and inputs.STIMULACIJA.amount)
zaoku = int(payslip.rule_parameter('ZAOKU'))
result = 0
if stimulacija &gt; 0:
    neto_bez_stimulacije = round(result_rules.REDRAD.amount * result_rules.REDRAD.quantity, zaoku)
    neto_bez_stimulacije += result_rules.NOCNI and round(result_rules.NOCNI.amount * result_rules.NOCNI.quantity, zaoku)
    neto_bez_stimulacije += result_rules.DPRAZ and round(result_rules.DPRAZ.amount * result_rules.DPRAZ.quantity, zaoku)
    neto_bez_stimulacije += result_rules.VPRAZ and round(result_rules.VPRAZ.amount * result_rules.VPRAZ.quantity, zaoku)
    neto_bez_stimulacije += result_rules.R_DPRAZ and round(result_rules.R_DPRAZ.amount * result_rules.R_DPRAZ.quantity, zaoku)
    neto_bez_stimulacije += result_rules.GODIS and round(result_rules.GODIS.amount * result_rules.GODIS.quantity, zaoku)
    neto_bez_stimulacije += result_rules.BOLOV and round(result_rules.BOLOV.amount * result_rules.BOLOV.quantity, zaoku)
    neto_bez_stimulacije += result_rules.BOLOV_POV and round(result_rules.BOLOV_POV.amount * result_rules.BOLOV_POV.quantity, zaoku)
    neto_bez_stimulacije += result_rules.CEKANJE and round(result_rules.CEKANJE.amount * result_rules.CEKANJE.quantity, zaoku)

    # ako se obracun odnosi na 15 od 30 dana ovog mjeseca, obrac_period = 0.5
    obrac_period = (worked_days.WORK100 and worked_days.WORK100.number_of_hours) / (worked_days.FWORK100 and worked_days.FWORK100.number_of_hours)

    fiks_pla = contract.wage * obrac_period
    # dnevno 1% prosjecne plate FBiH
    to_dnevno = float(payslip.rule_parameter('PROS_N_P_FBIH')) * 1 / 100.00
    to_umanjiti_platu = (worked_days.WORK100 and worked_days.WORK100.number_of_days) * to_dnevno
    neto_plata_bez_to = fiks_pla - to_umanjiti_platu + stimulacija

    # neto_prije oporezivanja trazimo
    kbo = float(payslip.rule_parameter('KOEF_BO'))/100
    kd_iz = (float(payslip.rule_parameter('D_IZ_PIO')) + float(payslip.rule_parameter('D_IZ_ZDR')) + float(payslip.rule_parameter('D_IZ_ZAP')))/100
    kpor = float(payslip.rule_parameter('POREZ'))/100
    lic_odb = contract.koef_lo * 300
    neto_poslije = neto_plata_bez_to
    if (neto_poslije - lic_odb * kpor) &lt;= 0:
        neto_sa_stimul_prije = neto_poslije
    else:
        neto_sa_stimul_prije = (neto_poslije - lic_odb * kpor) / (1 - kbo * kpor * (1 - kd_iz))

    # stimulacija
    stimul_prije = neto_sa_stimul_prije - neto_bez_stimulacije
    result_qty = 1
    result = round(stimul_prije, zaoku)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_kor_min_met" model="hr.salary.rule">
        <field name="name">Korekcija minimalno primanje</field>
        <field name="sequence" eval="40" />
        <field name="code">KOREK_MET</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
zaoku = int(payslip.rule_parameter('ZAOKU'))
neto = round(result_rules.REDRAD.amount * result_rules.REDRAD.quantity, zaoku)
neto += result_rules.NOCNI and round(result_rules.NOCNI.amount * result_rules.NOCNI.quantity, zaoku)
neto += result_rules.DPRAZ and round(result_rules.DPRAZ.amount * result_rules.DPRAZ.quantity, zaoku)
neto += result_rules.VPRAZ and round(result_rules.VPRAZ.amount * result_rules.VPRAZ.quantity, zaoku)
neto += result_rules.R_DPRAZ and round(result_rules.R_DPRAZ.amount * result_rules.R_DPRAZ.quantity, zaoku)
neto += result_rules.GODIS and round(result_rules.GODIS.amount * result_rules.GODIS.quantity, zaoku)
neto += result_rules.BOLOV and round(result_rules.BOLOV.amount * result_rules.BOLOV.quantity, zaoku)
neto += result_rules.BOLOV_POV and round(result_rules.BOLOV_POV.amount * result_rules.BOLOV_POV.quantity, zaoku)
neto += result_rules.BOL_PREKO and round(result_rules.BOL_PREKO.amount * result_rules.BOL_PREKO.quantity, zaoku)
neto += result_rules.CEKANJE and round(result_rules.CEKANJE.amount * result_rules.CEKANJE.quantity, zaoku)
neto += result_rules.MINRAD and round(result_rules.MINRAD.amount * result_rules.MINRAD.quantity * result_rules.MINRAD.rate/100, zaoku)
neto += result_rules.STIMUL and round(result_rules.STIMUL.amount * result_rules.STIMUL.quantity, zaoku)
neto += result_rules.TO_O and round(result_rules.TO_O.amount * result_rules.TO_O.quantity, zaoku)
result_qty = worked_days.WORK100.number_of_hours
# plata po min neto satnici metalaca
min_met = result_qty * float(payslip.rule_parameter('MNS_MET_FBIH'))
# mora biti i od veca od minimalne neto plate u FBiH
min_met = max(min_met, float(payslip.rule_parameter('MIN_NETO_FBIH')))
# ako nema porezne kartice, min neto plata prije poreza treba biti jos veca
if contract.koef_lo == 0:
  min_met = max(min_met, float(payslip.rule_parameter('MIN_NETO_FBIH_BPK')))
# mora biti i od veca od minimalne neto plate metalaca u FBiH
min_met = max(min_met, float(payslip.rule_parameter('MIN_MET_NETO_FBIH')))
result = 0
if min_met &gt; neto:
   result = (min_met - neto) / result_qty
if result == 0:
   result_qty = 0
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

   <record id="hr_salary_rule_kor_min" model="hr.salary.rule">
        <field name="name">Korekcija - minimum po opštem kolektivnom ugovoru</field>
        <field name="sequence" eval="40" />
        <field name="code">KOREK</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
zaoku = int(payslip.rule_parameter('ZAOKU'))
neto = round(result_rules.REDRAD.amount * result_rules.REDRAD.quantity, zaoku)
neto += result_rules.NOCNI and round(result_rules.NOCNI.amount * result_rules.NOCNI.quantity, zaoku)
neto += result_rules.DPRAZ and round(result_rules.DPRAZ.amount * result_rules.DPRAZ.quantity, zaoku)
neto += result_rules.VPRAZ and round(result_rules.VPRAZ.amount * result_rules.VPRAZ.quantity, zaoku)
neto += result_rules.R_DPRAZ and round(result_rules.R_DPRAZ.amount * result_rules.R_DPRAZ.quantity, zaoku)
neto += result_rules.GODIS and round(result_rules.GODIS.amount * result_rules.GODIS.quantity, zaoku)
neto += result_rules.BOLOV and round(result_rules.BOLOV.amount * result_rules.BOLOV.quantity, zaoku)
neto += result_rules.BOLOV_POV and round(result_rules.BOLOV_POV.amount * result_rules.BOLOV_POV.quantity, zaoku)
neto += result_rules.BOL_PREKO and round(result_rules.BOL_PREKO.amount * result_rules.BOL_PREKO.quantity, zaoku)
neto += result_rules.CEKANJE and round(result_rules.CEKANJE.amount * result_rules.CEKANJE.quantity, zaoku)
neto += result_rules.MINRAD and round(result_rules.MINRAD.amount * result_rules.MINRAD.quantity * result_rules.MINRAD.rate/100, zaoku)
neto += result_rules.STIMUL and round(result_rules.STIMUL.amount * result_rules.STIMUL.quantity, zaoku)
neto += result_rules.TO_O and round(result_rules.TO_O.amount * result_rules.TO_O.quantity, zaoku)

result_qty = worked_days.WORK100.number_of_hours
# plata po min neto satnici opsti kolektivni ugovor FBiH
min_pl = result_qty * float(payslip.rule_parameter('MNS_FBIH'))
# mora biti i od veca od minimalne neto plate u FBiH
min_pl = max(min_pl, float(payslip.rule_parameter('MIN_NETO_FBIH')))
if min_pl &gt; neto:
   result = (min_pl - neto) / result_qty
if result == 0:
   result_qty = 0
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>


    <record id="hr_salary_rule_rod_ods" model="hr.salary.rule">
        <field name="name">Roditeljsko odsustvo (0%)</field>
        <field name="sequence" eval="45" />
        <field name="code">ROD_ODS</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO_SUB" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_qty =  worked_days.RODITELJSKO_ODSUSTVO and abs(worked_days.RODITELJSKO_ODSUSTVO.number_of_hours)
# redovan rad 0%
result = contract.br_bod * float(payslip.rule_parameter('VRBOD')) * 0.0
result = round(result, int(payslip.rule_parameter('ZAOK')))
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>


    <record id="hr_salary_rule_to" model="hr.salary.rule">
        <field name="name">Topli obrok (neoporeziva naknada)</field>
        <field name="sequence" eval="55" />
        <field name="code">TO</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NAKN" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
zaoku = int(payslip.rule_parameter('ZAOKU'))
result_qty =  worked_days.FOOD and worked_days.FOOD.number_of_days
# dnevno 1% prosjecne plate FBiH
result = float(payslip.rule_parameter('PROS_N_P_FBIH')) * 1 / 100.00
result = round(result, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_neto" model="hr.salary.rule">
        <field name="name">Neto plata prije poreza</field>
        <field name="sequence" eval="100" />
        <field name="code">NETO</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.NETO" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_qty = 1
zaoku = int(payslip.rule_parameter('ZAOKU'))
result = round(result_rules.REDRAD.amount * result_rules.REDRAD.quantity * result_rules.REDRAD.rate/100, zaoku)
result += result_rules.NOCNI and round(result_rules.NOCNI.amount * result_rules.NOCNI.quantity * result_rules.NOCNI.rate/100, zaoku)
result += result_rules.DPRAZ and round(result_rules.DPRAZ.amount * result_rules.DPRAZ.quantity * result_rules.DPRAZ.rate/100, zaoku)
result += result_rules.VPRAZ and round(result_rules.VPRAZ.amount * result_rules.VPRAZ.quantity * result_rules.VPRAZ.rate/100, zaoku)
result += result_rules.R_DPRAZ and round(result_rules.R_DPRAZ.amount * result_rules.R_DPRAZ.quantity * result_rules.R_DPRAZ.rate/100, zaoku)
result += result_rules.GODIS and round(result_rules.GODIS.amount * result_rules.GODIS.quantity * result_rules.GODIS.rate/100, zaoku)
result += result_rules.BOLOV and round(result_rules.BOLOV.amount * result_rules.BOLOV.quantity * result_rules.BOLOV.rate/100, zaoku)
result += result_rules.BOLOV_POV and round(result_rules.BOLOV_POV.amount * result_rules.BOLOV_POV.quantity * result_rules.BOLOV.rate/100, zaoku)
result += result_rules.BOL_PREKO and round(result_rules.BOL_PREKO.amount * result_rules.BOL_PREKO.quantity, zaoku)
result += result_rules.CEKANJE and round(result_rules.CEKANJE.amount * result_rules.CEKANJE.quantity * result_rules.CEKANJE.rate/100, zaoku)
result += result_rules.MINRAD and round(result_rules.MINRAD.amount * result_rules.MINRAD.quantity * result_rules.MINRAD.rate/100, zaoku)
result += result_rules.STIMUL and round(result_rules.STIMUL.amount * result_rules.STIMUL.quantity, zaoku)
result += result_rules.TO_O and round(result_rules.TO_O.amount * result_rules.TO_O.quantity * result_rules.TO_O.rate/100, zaoku)
result += result_rules.KOREK_MET and round(result_rules.KOREK_MET.amount * result_rules.KOREK_MET.quantity * result_rules.KOREK_MET.rate/100, zaoku) if result_rules.KOREK_MET else 0
result += result_rules.KOREK and round(result_rules.KOREK.amount * result_rules.KOREK.quantity * result_rules.KOREK.rate/100, zaoku) if result_rules.KOREK else 0
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_bruto_osn" model="hr.salary.rule">
        <field name="name">Bruto osnovica</field>
        <field name="sequence" eval="110" />
        <field name="code">BR_OSN</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.BR_OSN" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
zaok = int(payslip.rule_parameter('ZAOK'))
result_rate = float(payslip.rule_parameter('KOEF_BO'))
result = round(result_rules.NETO.amount, zaok)
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

    <record id="hr_salary_rule_obust" model="hr.salary.rule">
        <field name="name">Obustava 1</field>
        <field name="sequence" eval="150" />
        <field name="code">OB_1</field>
        <field name="category_id" ref="l10n_bs_hr_payroll_fuelboss.OBUST" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
        </field>
        <field name="company_id" search="[('name','ilike','Fuelboss doo Zenica')]" model="res.company"/>
    </record>

</odoo>
